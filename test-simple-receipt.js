// Test simple pour identifier le probl√®me de cr√©ation de re√ßus
const axios = require('axios');

async function testSimpleReceipt() {
    try {
        console.log('üîç Test simple de cr√©ation de re√ßu');
        console.log('=====================================');
        
        // 1. Connexion
        const loginResponse = await axios.post('http://localhost:8082/auth/signin', {
            username: 'admin',
            password: 'admin123'
        });
        
        const token = loginResponse.data.token;
        console.log('‚úÖ Connexion r√©ussie');
        
        const headers = {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        };
        
        // 2. R√©cup√©rer les ventes
        const salesResponse = await axios.get('http://localhost:8082/sales', { headers });
        const sales = salesResponse.data.content;
        console.log(`‚úÖ ${sales.length} ventes trouv√©es`);
        
        if (sales.length === 0) {
            console.log('‚ùå Aucune vente disponible');
            return;
        }
        
        // 3. Afficher les d√©tails de la premi√®re vente
        const firstSale = sales[0];
        console.log(`\nüìã D√©tails de la vente:`);
        console.log(`   ID: ${firstSale.id}`);
        console.log(`   Num√©ro: ${firstSale.saleNumber}`);
        console.log(`   Client: ${firstSale.customerName}`);
        console.log(`   Montant: ${firstSale.totalAmount}`);
        console.log(`   Cr√©ateur ID: ${firstSale.createdBy}`);
        
        // 4. Tester la cr√©ation d'un re√ßu
        console.log(`\nüßæ Test de cr√©ation d'un re√ßu pour la vente ${firstSale.id}...`);
        
        try {
            const createResponse = await axios.post(`http://localhost:8082/api/receipts/create/${firstSale.id}`, {}, { headers });
            console.log('‚úÖ Re√ßu cr√©√© avec succ√®s !');
            console.log(`   Re√ßu ID: ${createResponse.data.receipt.id}`);
            console.log(`   Num√©ro: ${createResponse.data.receipt.receiptNumber}`);
            console.log(`   Message: ${createResponse.data.message}`);
        } catch (createError) {
            console.log('‚ùå Erreur lors de la cr√©ation:');
            console.log(`   Status: ${createError.response?.status}`);
            console.log(`   Message: ${createError.response?.data?.error || createError.message}`);
            
            if (createError.response?.data?.details) {
                console.log(`   D√©tails: ${createError.response.data.details}`);
            }
        }
        
    } catch (error) {
        console.error('‚ùå Erreur g√©n√©rale:', error.message);
        if (error.response) {
            console.error('   Status:', error.response.status);
            console.error('   Data:', error.response.data);
        }
    }
}

testSimpleReceipt();
